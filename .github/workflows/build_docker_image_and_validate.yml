name: Build docker image and run some tests on it

on: ["push"]


jobs:

  build-and-push-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      prod-image-name: ${{ steps.build-images-names.outputs.prod-image-name }}
      dev-image-name: ${{ steps.build-images-names.outputs.dev-image-name }}

    steps:
      - name: "⬇️ Checkout code"
        uses: actions/checkout@v4

      - name: "😎 Log in to Github Container Registry"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "💭 Determine docker image tag"
        id: build-images-names
        run: |
          echo "Github ref: ${GITHUB_REF}"

          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            tag="${GITHUB_REF#refs/tags/}"
            echo "We are in a TAG event, using tag as image tag..."
          else
            tag="${GITHUB_SHA::7}"
          fi

          echo "The image tag will be: ${tag}"
          echo "IMAGE_TAG=${tag}" >> $GITHUB_ENV

          BASE_NAME="ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}"
          PROD_NAME="${BASE_NAME}/prod:${tag}"
          DEV_NAME="${BASE_NAME}/dev:${tag}"

          echo "Prod image name will be: ${PROD_NAME}"
          echo "Dev image name will be: ${DEV_NAME}"

          echo "prod-image-name=${PROD_NAME}" >> $GITHUB_OUTPUT
          echo "dev-image-name=${DEV_NAME}" >> $GITHUB_OUTPUT

      - name: "👷 Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3

      - name: "🔨 & ⬆️ Build and push prod image"
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.build-images-names.outputs.prod-image-name }}
          file: docker/Dockerfile
          target: prod

      - name: "🔨 & ⬆️ Build and push dev image"
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.build-images-names.outputs.dev-image-name }}
          file: docker/Dockerfile
          target: dev

  run-unit-tests:
    needs: build-and-push-docker-image
    runs-on: ubuntu-latest
    container:
      image: ${{ needs.build-and-push-docker-image.outputs.dev-image-name }}
    permissions:
      contents: read

    steps:
      - name: "👓 -> 🐛 Run unit tests"
        run: |
          echo "Running unit tests..."
          /home/embeddev/.local/bin/poetry run tox
